<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP15" creationDateTime="2019-11-09T20:04:14.9456266" />
  <contentHeader name="robin.project" modificationDateTime="2019-11-09T20:04:14.9191861">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="CompiledLibraryCompatibilityVersion" type="string">CODESYS V3.5 SP15</property>
          <property name="Project" type="string">robin</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="RobinData">
        <baseType>
          <struct>
            <variable name="sem">
              <type>
                <derived name="RTS_IEC_HANDLE" />
              </type>
            </variable>
            <variable name="shm">
              <type>
                <derived name="RTS_IEC_HANDLE" />
              </type>
            </variable>
            <variable name="result">
              <type>
                <derived name="RTS_IEC_RESULT" />
              </type>
            </variable>
            <variable name="bytes">
              <type>
                <derived name="__UXINT" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData />
      </dataType>
    </dataTypes>
    <pous>
      <pou name="Robin" pouType="functionBlock">
        <interface>
          <localVars constant="true">
            <variable name="MAX_SIZE">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="10" />
              </initialValue>
            </variable>
            <variable name="SEM_TIMEOUT">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> in ms (16#FFFFFFFF = inf)</xhtml>
              </documentation>
            </variable>
          </localVars>
          <localVars>
            <variable name="data">
              <type>
                <array>
                  <dimension lower="1" upper="MAX_SIZE" />
                  <baseType>
                    <derived name="RobinData" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="idx">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">idx := 1;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_Init">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change)</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_Init is always available implicitly and it is used primarily for initialization.
The return value is not evaluated. For a specific influence, you can also declare the
methods explicitly and provide additional code there with the standard initialization
code. You can evaluate the return value.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FOR i := 1 TO MAX_SIZE DO
	data[i].sem := RTS_INVALID_HANDLE;
	data[i].shm := RTS_INVALID_HANDLE;
END_FOR;
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_Exit">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the exit method is called in order to leave the instance which will be copied afterwards (online change).  </xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_Exit must be implemented explicitly. If there is an implementation, then the
method is called before the controller removes the code of the function block instance
(implicit call). The return value is not evaluated.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF NOT bInCopyCode THEN
// 	result := SysSemProcessEnter(sem, SEM_TIMEOUT);
	FOR i := 1 TO MAX_SIZE DO
		IF data[idx].shm &lt;&gt; RTS_INVALID_HANDLE THEN
			data[idx].result := SysSharedMemoryClose(data[idx].shm);
// 			data[idx].result := SysSharedMemoryDelete(data[idx].shm);
		END_IF
	END_FOR;
// 	result := SysSharedMemoryDelete(shm);
// 	result := SysSemProcessDelete(sem);
// END_IF
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="open">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="size">
                    <type>
                      <derived name="__UXINT" />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF data[idx].shm = RTS_INVALID_HANDLE THEN
	data[idx].shm := SysSharedMemoryOpen2(name, 0, ADR(size), ADR(data[idx].result));
	IF data[idx].shm &lt;&gt; RTS_INVALID_HANDLE THEN
		data[idx].sem := SysSemProcessCreate(name, ADR(data[idx].result));
		IF data[idx].sem &lt;&gt; RTS_INVALID_HANDLE THEN
			open := TRUE;
		END_IF
	ELSE
		open := FALSE;
	END_IF
ELSE
	open := TRUE;
END_IF
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="read">
              <interface>
                <inputVars>
                  <variable name="name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="var_">
                    <type>
                      <derived name="__SYSTEM.AnyType" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="anytypeclass" Value="ANY" />
                        </Attributes>
                      </data>
                    </addData>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="size">
                    <type>
                      <derived name="__UXINT" />
                    </type>
                    <initialValue>
                      <simpleValue value="DINT_TO___UXINT(var_.diSize)" />
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="hasanytype" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF open(name, size) THEN
	IF SysSemProcessEnter(data[idx].sem, SEM_TIMEOUT) = Errors.ERR_OK THEN
		data[idx].bytes := SysSharedMemoryRead(data[idx].Shm, 0, var_.pValue, size, ADR(data[idx].result));
		data[idx].result := SysSemProcessLeave(data[idx].sem);
	END_IF
END_IF
idx := idx + 1;
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="write">
              <interface>
                <inputVars>
                  <variable name="name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="var_">
                    <type>
                      <derived name="__SYSTEM.AnyType" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="anytypeclass" Value="ANY" />
                        </Attributes>
                      </data>
                    </addData>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="size">
                    <type>
                      <derived name="__UXINT" />
                    </type>
                    <initialValue>
                      <simpleValue value="DINT_TO___UXINT(var_.diSize)" />
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="hasanytype" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF open(name, size) THEN
	IF SysSemProcessEnter(data[idx].sem, SEM_TIMEOUT) = Errors.ERR_OK THEN
		data[idx].bytes := SysSharedMemoryWrite(data[idx].shm, 0, var_.pValue, size, ADR(data[idx].result));
		data[idx].result := SysSemProcessLeave(data[idx].sem);
	END_IF
END_IF
idx := idx + 1;
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Device">
        <resource name="Application">
          <task name="MainTask" interval="PT0.01S" priority="1">
            <pouInstance name="MAIN" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="ROS_PRG" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="10" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
            </addData>
          </task>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="TestStruct_foo">
                <baseType>
                  <struct>
                    <variable name="var_bool_1">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="var_struct_1">
                      <type>
                        <derived name="TestSubStruct" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> 	var_bool_2		: BOOL	:= TRUE;</xhtml>
                      </documentation>
                    </variable>
                    <variable name="var_struct_2">
                      <type>
                        <derived name="TestSubStruct" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData />
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="TestSubStruct">
                <baseType>
                  <struct>
                    <variable name="var_float64_1">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.123456789" />
                      </initialValue>
                    </variable>
                    <variable name="var_float64_2">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="-10.9876554321" />
                      </initialValue>
                    </variable>
                  </struct>
                </baseType>
                <addData />
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="TestStruct_bar">
                <baseType>
                  <struct>
                    <variable name="var_bool">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="var_byte">
                      <type>
                        <BYTE />
                      </type>
                      <initialValue>
                        <simpleValue value="128" />
                      </initialValue>
                    </variable>
                    <variable name="var_int16">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="-12345" />
                      </initialValue>
                    </variable>
                    <variable name="var_uint64">
                      <type>
                        <ULINT />
                      </type>
                      <initialValue>
                        <simpleValue value="9876543210123456789" />
                      </initialValue>
                    </variable>
                    <variable name="var_float32">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1234.5" />
                      </initialValue>
                    </variable>
                    <variable name="var_float64">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.123456789" />
                      </initialValue>
                    </variable>
                    <variable name="var_struct">
                      <type>
                        <derived name="TestSubStruct" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData />
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="MAIN" pouType="program">
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">ROS_PRG.double_to_ros := ROS_PRG.double_to_codesys;
ROS_PRG.struct_to_ros_1 := ROS_PRG.struct_to_codesys_1;
// ROS_PRG.struct_to_ros_2 := ROS_PRG.struct_to_codesys_2;
</xhtml>
                  </ST>
                </body>
                <addData />
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ROS_PRG" pouType="program">
                <interface>
                  <inputVars>
                    <variable name="double_to_ros">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="struct_to_ros_1">
                      <type>
                        <derived name="TestStruct_foo" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="double_to_codesys">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="struct_to_codesys_1">
                      <type>
                        <derived name="TestStruct_foo" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="robin">
                      <type>
                        <derived name="Robin" />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">robin();
robin.read('double_to_codesys', double_to_codesys);
robin.read('struct_to_codesys_1', struct_to_codesys_1);
// robin.read('struct_to_codesys_2', struct_to_codesys_2);
robin.write('double_to_ros', double_to_ros);
robin.write('struct_to_ros_1', struct_to_ros_1);
// robin.write('struct_to_ros_2', struct_to_ros_2);
</xhtml>
                  </ST>
                </body>
                <addData />
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.15.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.15.0 (CAA Technical Workgroup)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_Basic" Namespace="SM3_Basic" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Basic, 4.6.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_CNC" Namespace="SM3_CNC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_CNC, 4.6.0.0 (3S - Smart Software Solutions GmbH)" />
                <addData />
              </Libraries>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4102</Type>
                  <Id>0000 0005</Id>
                  <Version>3.5.15.0</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="1279" interface="Common.SoftMotion.General" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations>
              <configuration name="SoftMotion General Axis Pool">
                <addData>
                  <data name="ExplicitConnector" handleUnknown="discard">
                    <ExplicitConnector connectorID="1" />
                  </data>
                </addData>
              </configuration>
            </configurations>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="SysSemProcess, 3.5.5.0 (System)" Namespace="SysSemProcess" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="SysShm, 3.5.8.0 (System)" Namespace="SysShm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="SysTypes Interfaces, 3.5.2.0 (System)" Namespace="SysTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="CmpErrors, 3.3.1.40 (System)" Namespace="CmpErrors" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="SysProcess, 3.5.7.0 (System)" Namespace="SysProcess" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="Standard, 3.5.15.0 (System)" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <addData />
      </Libraries>
    </data>
  </addData>
</project>